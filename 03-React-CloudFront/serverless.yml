service: nodejs-websocket
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  profile: serverlessUser
  region: eu-west-1
  stackTags:
    Name: "Serverless Course"

plugins:
  - serverless-plugin-resource-tagging
  - serverless-iam-roles-per-function
  - serverless-s3-sync

custom:
  bucketName: serverless-react-app-03-06-2022
  s3Sync:
    - bucketName: ${self:custom.bucketName}
      localDir: demo-app/build/

resources:
  Resources:
    ReactAppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
    S3AccessPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: 
          Ref: ReactAppBucket
        PolicyDocument: 
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.bucketName}/*
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Origins:
            - DomainName: ${self:custom.bucketName}.s3.amazonaws.com
              Id: ReactApp
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: error.html
          DefaultCacheBehavior:
            TargetOriginId: ReactApp
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
          ViewerCertificate:
            CloudFrontDefaultCertificate: true